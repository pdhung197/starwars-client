{"version":3,"sources":["assets/images/collections sync /^/.*$","assets/images/collections/people.png","assets/images/collections/planet.png","assets/images/collections/starship.png","assets/images/collections/vehicles.png","assets/images/star-wars-logo-png-3-transparent.png","containers/Home/HomeView.js","utils/api/apiConfig.js","utils/api/apiUtils.js","actions/dataActions.js","containers/DataView/dataHeader.js","containers/DetailView/DetailView.js","components/DataTable/TablePagin.js","components/DataTable/StripedTable.js","components/SearchForm/SearchForm.js","constants/collections.js","containers/DataView/DataView.js","components/Nav/NavRoute.js","components/Nav/NavLogo.js","components/Nav/NavHambuger.js","components/Nav/Nav.js","containers/Layout/MainLayout.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","HomeView","dataListApi","process","callApi","url","config","onRequestSuccess","onRequestFailure","options","headers","Headers","append","uuidv4","msecs","Date","getTime","axios","then","res","catch","error","console","log","UrlBuilder","params","encodeURL","URL","forEach","key","searchParams","getDataList","dataName","assign","method","baseUrl","dataViewHeaders","vehiclesColumns","label","showDetail","minWidth","show","starshipsColumns","peopleColumns","planetsColumns","DetailView","props","data","onHide","className","title","image","body","Modal","dialogClassName","aria-labelledby","Header","closeButton","Body","src","alt","column","index","TablePagin","paginData","handleChangeActivedPage","handleNextOrPreviousPage","page","totalPage","numberOfPageButton","endPage","startPage","handlePaginationChange","value","preventDefault","isNaN","href","aria-label","onClick","disabled","aria-hidden","Array","from","length","btn","pageNumber","TableRow","this","rowData","columns","handleOnClickRow","customCell","cellData","Component","StripedTable","tableHeaders","tableColumns","bodyData","noPagination","footerData","tableHeader","row","colSpan","SearchForm","inputValue","onSearch","onInputChange","placeholder","inputProps","undefined","onChange","type","aria-describedby","onKeyPress","collections","img","route","collectionsList","planets","people","starships","vehicles","DataView","handleFetchData","state","search","count","results","setState","dataList","Math","ceil","limit","handleSearchChange","target","match","nextOrPrv","handleCloseDetailView","detailCharacter","handleGetDetailItem","name","avatar","getTableHeaders","reduce","TableHeaders","width","style","push","getTableColumns","tableColumn","character","includes","nextProps","nextDataName","withRouter","NavRoute","to","require","NavLogo","NavHambuger","handleClickOutsideHambuger","event","buttonWrapperRef","contains","open","setButtonWrapperRef","bind","document","addEventListener","removeEventListener","node","ref","isExact","location","pathname","useState","toggleOpen","collect","collectData","startsWith","MainLayout","role","exact","path","component","App","Boolean","window","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.03403763.chunk.js","sourcesContent":["var map = {\n\t\"./people.png\": 80,\n\t\"./planet.png\": 81,\n\t\"./starship.png\": 82,\n\t\"./vehicles.png\": 83\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 79;","module.exports = __webpack_public_path__ + \"static/media/people.5cc2d89b.png\";","module.exports = __webpack_public_path__ + \"static/media/planet.8d9481f5.png\";","module.exports = __webpack_public_path__ + \"static/media/starship.f7e7871e.png\";","module.exports = __webpack_public_path__ + \"static/media/vehicles.71f41fb5.png\";","module.exports = __webpack_public_path__ + \"static/media/star-wars-logo-png-3-transparent.62a19047.png\";","import React from 'react'\r\n\r\nfunction HomeView() {\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeView\r\n","export const serverBase = process.env.REACT_APP_API_SERVER || \"https://starwars-api-pdhung.herokuapp.com/api/\";\r\n\r\n/* Data list api */\r\nexport const dataListApi = serverBase;","import axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const callApi = (\r\n    url, /* Api URL */\r\n    config,\r\n    onRequestSuccess, /* Callback when call api function is success */\r\n    onRequestFailure /* Callback when call api function got error */\r\n) => {\r\n    const options = {\r\n        ...config,\r\n        url\r\n    };\r\n\r\n    let headers = new Headers();\r\n    /* Create Correlation Id to tracking request on server */\r\n    headers.append('x-request-id', uuidv4({ msecs: new Date().getTime() }))\r\n    /* Only accept json response */\r\n    headers.append(\"Accept\", \"application/json\");\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n\r\n    const clientRequest = axios(options);\r\n\r\n    return clientRequest\r\n        .then(res => {\r\n            if (onRequestSuccess) onRequestSuccess(res);\r\n            return res;\r\n        })\r\n        .catch(error => {\r\n            console.log({ error });\r\n            if (onRequestFailure) onRequestFailure(error);\r\n        });\r\n}\r\n\r\nexport function UrlBuilder(url, params) {\r\n    let encodeURL = new URL(url);\r\n\r\n    if (params != null)\r\n        Object.keys(params).forEach(key =>\r\n            encodeURL.searchParams.append(key, params[key])\r\n        );\r\n\r\n    return encodeURL;\r\n}","import { dataListApi } from './../utils/api/apiConfig';\r\nimport { callApi, UrlBuilder } from './../utils/api/apiUtils';\r\n\r\n/* Get data list of characters, vehicles, people, planet... */\r\nexport const getDataList = (dataName, options = {}) => {\r\n    options = Object.assign({}, options);\r\n    const config = {\r\n        method: 'get'\r\n    };\r\n\r\n    const baseUrl = `${dataListApi}${dataName}/`;\r\n    const url = UrlBuilder(baseUrl, options);\r\n\r\n    return callApi(\r\n        url,\r\n        config\r\n    )\r\n}","const vehiclesColumns = [\r\n    {\r\n        key: 'avatar',\r\n        label: 'Avatar',\r\n        showDetail: false\r\n    },\r\n    {\r\n        key: 'name',\r\n        label: 'Name',\r\n        minWidth: 200,\r\n        showDetail: false\r\n    },\r\n    {\r\n        key: 'model',\r\n        label: 'Model'\r\n    },\r\n    {\r\n        key: 'passengers',\r\n        label: 'Passengers'\r\n    },\r\n    {\r\n        key: 'vehicle_class',\r\n        label: 'Vehicles class',\r\n        minWidth: 200\r\n    },\r\n    {\r\n        key: 'manufacturer',\r\n        label: 'Manufacturer',\r\n        show: false\r\n    },\r\n    {\r\n        key: 'length',\r\n        label: 'Length',\r\n        show: false\r\n    },\r\n    {\r\n        key: 'max_atmosphering_speed',\r\n        label: 'Max atmosphering speed',\r\n        show: false\r\n    },\r\n    {\r\n        key: 'cargo_capacity',\r\n        label: 'Cargo capacity',\r\n        show: false\r\n    },\r\n    {\r\n        key: 'consumables',\r\n        label: 'Consumables',\r\n        show: false\r\n    }\r\n];\r\n\r\nconst peopleColumns = [\r\n    {\r\n        key: 'avatar',\r\n        label: 'Avatar',\r\n        showDetail: false\r\n    },\r\n    {\r\n        key: 'name',\r\n        label: 'Name',\r\n        showDetail: false\r\n    },\r\n    {\r\n        key: 'gender',\r\n        label: 'Gender'\r\n    },\r\n    {\r\n        key: 'birth_year',\r\n        label: 'Birth year'\r\n    },\r\n    {\r\n        key: 'height',\r\n        label: 'Height',\r\n        show: false\r\n    },\r\n    {\r\n        key: 'mass',\r\n        label: 'Mass',\r\n        show: false\r\n    },\r\n    {\r\n        key: 'Hair_color',\r\n        label: 'Hair color',\r\n        show: false\r\n    },\r\n    {\r\n        key: 'skin_color',\r\n        label: 'Skin color',\r\n        show: false\r\n    },\r\n    {\r\n        key: 'eye_color',\r\n        label: 'Eye color',\r\n        show: false\r\n    }\r\n];\r\n\r\nconst planetsColumns = [\r\n    {\r\n        key: 'avatar',\r\n        label: 'Avatar',\r\n        showDetail: false\r\n    },\r\n    {\r\n        key: 'name',\r\n        label: 'Name',\r\n        showDetail: false\r\n    },\r\n    {\r\n        key: 'terrain',\r\n        label: 'Terrain'\r\n    },\r\n    {\r\n        key: 'population',\r\n        label: 'Population'\r\n    },\r\n    {\r\n        key: 'rotation_period',\r\n        label: 'Rotation period',\r\n        show: false\r\n    },\r\n    {\r\n        key: 'orbital_period',\r\n        label: 'Obital period',\r\n        show: false\r\n    },\r\n    {\r\n        key: 'diameter',\r\n        label: 'Diameter',\r\n        show: false\r\n    },\r\n    {\r\n        key: 'climate',\r\n        label: 'Climate',\r\n        show: false\r\n    },\r\n    {\r\n        key: 'gravity',\r\n        label: 'Gravity',\r\n        show: false\r\n    },\r\n    {\r\n        key: 'surface_water',\r\n        label: 'Surface water',\r\n        show: false\r\n    }\r\n];\r\n\r\nconst starshipsColumns = [\r\n    {\r\n        key: 'avatar',\r\n        label: 'Avatar',\r\n        showDetail: false\r\n    },\r\n    {\r\n        key: 'name',\r\n        label: 'Name',\r\n        showDetail: false\r\n    },\r\n    {\r\n        key: 'model',\r\n        label: 'Model'\r\n    },\r\n    {\r\n        key: 'manufacturer',\r\n        label: 'Manufacturer'\r\n    },\r\n    {\r\n        key: 'passengers',\r\n        label: 'Passengers'\r\n    },\r\n    {\r\n        key: 'length',\r\n        label: 'Length',\r\n        show: false\r\n    },\r\n    {\r\n        key: 'max_atmosphering_speed',\r\n        label: 'Max atmosphering speed',\r\n        show: false\r\n    },\r\n    {\r\n        key: 'cargo_capacity',\r\n        label: 'Cargo capacity',\r\n        show: false\r\n    },\r\n    {\r\n        key: 'consumables',\r\n        label: 'Consumables',\r\n        show: false\r\n    },\r\n    {\r\n        key: 'starship_class',\r\n        label: 'Starship class',\r\n        show: false\r\n    }\r\n];\r\n\r\nexport const dataViewHeaders = {\r\n    vehiclesColumns,\r\n    starshipsColumns,\r\n    peopleColumns,\r\n    planetsColumns\r\n}","import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nimport { dataViewHeaders } from './../DataView/dataHeader';\r\n\r\nimport './_DetailView.scss'\r\n\r\nfunction DetailView(props) {\r\n    const {\r\n        data,\r\n        onHide,\r\n        className = '',\r\n        dataName\r\n    } = props || {};\r\n\r\n    const {\r\n        title = '',\r\n        image = '',\r\n        body = {}\r\n    } = data || {};\r\n\r\n    return (\r\n        <Modal\r\n            show={!!data}\r\n            onHide={() => onHide()}\r\n            dialogClassName={`detail-view__modal ${className} modal-lg`}\r\n            aria-labelledby=\"detail-view-modal\"\r\n        >\r\n            <Modal.Header closeButton>\r\n\r\n            </Modal.Header>\r\n            <Modal.Body\r\n                className=\"detail-view__body\"\r\n            >\r\n                <div className=\"detail-view__main-img\">\r\n                    <img className=\"\" src={image} alt={title} />\r\n                </div>\r\n                <h1 className=\"detail-view__title\">{title}</h1>\r\n                <ul className=\"detail-view__detail\">\r\n                    {\r\n                        (dataViewHeaders[`${dataName}Columns`] || []).map((column, index) => {\r\n                            return column.showDetail === false ? null : <li key={index}>\r\n                                <p>\r\n                                    <span className=\"detail-view__detail--label\">{column.label} :</span>\r\n                                    <span className=\"detail-view__detail--content\">{body[column.key] || ''}</span>\r\n                                </p>\r\n                            </li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default DetailView\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction TablePagin(props) {\r\n    const {\r\n        paginData,\r\n        handleChangeActivedPage,\r\n        handleNextOrPreviousPage\r\n    } = props || {};\r\n\r\n    /* Show max 5 page in pagination */\r\n    const {\r\n        page = 1,\r\n        totalPage = 0\r\n    } = paginData || {};\r\n\r\n    /* If total page is more than 5, show 5 */\r\n    const numberOfPageButton = totalPage > 5 ? 5 : totalPage;\r\n\r\n    /* Find end page */\r\n    const endPage = page + 2 > totalPage\r\n        ? totalPage\r\n        : page + 2 > numberOfPageButton ?\r\n            page + 2\r\n            : numberOfPageButton;\r\n\r\n    /* Find start page depending on end page */\r\n    const startPage = endPage - numberOfPageButton < 1 ? 1 : endPage - numberOfPageButton;\r\n\r\n    const handlePaginationChange = (e, value) => {\r\n        e.preventDefault();\r\n        return isNaN(value)\r\n            ? handleNextOrPreviousPage(value)\r\n            : handleChangeActivedPage(value)\r\n    }\r\n\r\n    return (\r\n        <ul className=\"pagination\">\r\n            <li className={`page-item ${page === 1 ? 'disabled' : ''}`}>\r\n                <a\r\n                    className=\"page-link\"\r\n                    href=\"/\"\r\n                    aria-label=\"Previous\"\r\n                    onClick={(e) => handlePaginationChange(e, 'prv')}\r\n                    disabled={page === 1}\r\n                >\r\n                    <span aria-hidden=\"true\">&laquo;</span>\r\n                </a>\r\n            </li>\r\n            {\r\n                Array.from({ length: endPage - startPage + 1 }, (btn, index) => {\r\n                    const pageNumber = index + startPage;\r\n\r\n                    return <li\r\n                        key={index}\r\n                        className={`page-item ${page === pageNumber ? 'active' : ''}`}\r\n                    >\r\n                        <a\r\n                            className=\"page-link\"\r\n                            href=\"/\"\r\n                            onClick={(e) => {\r\n                                return page === pageNumber\r\n                                    ? e.preventDefault()\r\n                                    : handlePaginationChange(e, pageNumber)\r\n                            }}\r\n                            disabled={page === pageNumber}\r\n                        >{pageNumber}</a>\r\n                    </li>\r\n                })\r\n            }\r\n\r\n            <li className={`page-item ${page === totalPage ? 'disabled' : ''}`}>\r\n                <a\r\n                    className=\"page-link\"\r\n                    href=\"/\"\r\n                    aria-label=\"Next\"\r\n                    onClick={(e) => handlePaginationChange(e, 'next')}\r\n                    disabled={page === totalPage}\r\n                >\r\n                    <span aria-hidden=\"true\">&raquo;</span>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nTablePagin.propTypes = {\r\n    paginData: PropTypes.object.isRequired,\r\n    handleChangeActivedPage: PropTypes.func,\r\n    handleNextOrPreviousPage: PropTypes.func\r\n}\r\n\r\nexport default TablePagin\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './_table.scss';\r\n\r\nimport TablePagin from './TablePagin';\r\n\r\nclass TableRow extends Component {\r\n    render() {\r\n        const {\r\n            rowData = {},\r\n            columns = [],\r\n            handleOnClickRow\r\n        } = this.props || {}\r\n\r\n        return (\r\n            <tr\r\n                className={`${handleOnClickRow ? 'table__row--clickable' : ''}`}\r\n                onClick={() => {\r\n                    return handleOnClickRow ? handleOnClickRow(rowData) : false\r\n                }}\r\n            >\r\n                {\r\n                    columns.map((column, index) => {\r\n                        const {\r\n                            key,\r\n                            customCell\r\n                        } = column || {};\r\n                        const cellData = customCell ? customCell(rowData) : rowData[key];\r\n\r\n                        return <td className=\"\" key={index}>\r\n                            {cellData}\r\n                        </td>\r\n                    })\r\n                }\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass StripedTable extends Component {\r\n    render() {\r\n        const {\r\n            tableHeaders = [],\r\n            tableColumns = [],\r\n            bodyData = [],\r\n            noPagination = false,\r\n            footerData = [],\r\n            handleChangeActivedPage = () => { },\r\n            handleNextOrPreviousPage = () => { },\r\n            handleOnClickRow,\r\n            className = ''\r\n        } = this.props || {}\r\n        return (\r\n            <>\r\n                <div className={`table-responsive ${className}`}>\r\n                    <table className=\"table table-striped table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                {\r\n                                    tableHeaders.map((tableHeader, index) => {\r\n                                        return (<th key={index}>\r\n                                            {tableHeader}\r\n                                        </th>)\r\n                                    })\r\n                                }\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                bodyData && bodyData.length ? bodyData.map((row, index) => <TableRow\r\n                                    key={index}\r\n                                    rowData={row}\r\n                                    columns={tableColumns}\r\n                                    handleOnClickRow={handleOnClickRow}\r\n                                />)\r\n                                    : <tr>\r\n                                        <td colSpan={tableHeaders.length}>\r\n                                            <p className=\"no-data\">Nothing to show</p>\r\n                                        </td>\r\n                                    </tr>\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {\r\n                    !noPagination && <TablePagin\r\n                        paginData={footerData}\r\n                        handleChangeActivedPage={handleChangeActivedPage}\r\n                        handleNextOrPreviousPage={handleNextOrPreviousPage}\r\n                    />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nStripedTable.propTypes = {\r\n    bodyData: PropTypes.array.isRequired,\r\n    tableHeaders: PropTypes.array.isRequired,\r\n    tableColumns: PropTypes.array.isRequired,\r\n    footerData: PropTypes.object.isRequired,\r\n    noPagination: PropTypes.bool,\r\n    handleChangeActivedPage: PropTypes.func,\r\n    handleNextOrPreviousPage: PropTypes.func,\r\n    handleOnClickRow: PropTypes.func\r\n}\r\n\r\nexport default StripedTable;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './_SearchForm.scss';\r\n\r\nfunction SearchForm(props) {\r\n    const {\r\n        inputValue,\r\n        onSearch = () => { },\r\n        onInputChange = () => { },\r\n        placeholder = ''\r\n    } = props || {};\r\n\r\n    const inputProps = {};\r\n\r\n    if (inputValue !== undefined) {\r\n        inputProps.value = inputValue;\r\n        inputProps.onChange = onInputChange;\r\n    }\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\") onSearch();\r\n    }\r\n\r\n    return (\r\n        <div className={`input-group search-group`}>\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control search-group__input\"\r\n                placeholder={placeholder}\r\n                aria-label={placeholder}\r\n                aria-describedby=\"button-search\"\r\n                onKeyPress={handleKeyPress}\r\n                {...inputProps}\r\n            />\r\n            <div className=\"input-group-append\">\r\n                <button\r\n                    className=\"btn search-group__btn\"\r\n                    type=\"button\"\r\n                    id=\"button-search\"\r\n                    onClick={onSearch}\r\n                >\r\n                    Search\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nSearchForm.propTypes = {\r\n    inputValue: PropTypes.string,\r\n    onSearch: PropTypes.func,\r\n    onInputChange: PropTypes.func\r\n}\r\n\r\nexport default SearchForm\r\n","export const collections = [\r\n    {\r\n        key: 'planets',\r\n        label: 'Planets',\r\n        img: 'planet.png',\r\n        route: '/data/planets'\r\n    },\r\n    {\r\n        key: 'people',\r\n        label: 'Peoples',\r\n        img: 'people.png',\r\n        route: '/data/people'\r\n    },\r\n    {\r\n        key: 'starships',\r\n        label: 'Starships',\r\n        img: 'starship.png',\r\n        route: '/data/starships'\r\n    },\r\n    {\r\n        key: 'vehicles',\r\n        label: 'Vehicles',\r\n        img: 'vehicles.png',\r\n        route: '/data/vehicles'\r\n    }\r\n];\r\n\r\nexport const collectionsList = {\r\n    planets: \"Planets\",\r\n    people: \"People\",\r\n    starships: \"Starships\",\r\n    vehicles: \"Vehicles\"\r\n}","import React, { Component } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { getDataList } from './../../actions/dataActions';\r\n\r\nimport DetailView from './../DetailView/DetailView';\r\n\r\nimport StripedTable from './../../components/DataTable/StripedTable';\r\nimport SearchForm from './../../components/SearchForm/SearchForm';\r\n\r\nimport { dataViewHeaders } from './dataHeader';\r\nimport { collectionsList } from './../../constants/collections';\r\n\r\nimport './_DataView.scss';\r\n\r\nclass DataView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataList: [],\r\n            footerData: {\r\n                page: 1,\r\n                count: 0,\r\n                totalPage: 0,\r\n                limit: 10\r\n            },\r\n            search: '',\r\n            detailCharacter: null\r\n        }\r\n    }\r\n\r\n    //#region 'Data region'\r\n\r\n    /* Function call action to fetch data depending on dataName (eg: Planet, Vehicles ...) */\r\n    handleFetchData = (dataName, params = { page: 1 }) => {\r\n        const {\r\n            search\r\n        } = this.state || {};\r\n        const {\r\n            page = 1\r\n        } = params;\r\n\r\n        if (search && search.length) params.search = search;\r\n\r\n        getDataList(dataName, params)\r\n            .then(res => {\r\n                const {\r\n                    data: {\r\n                        count = 0,\r\n                        results = []\r\n                    } = {}\r\n                } = res || {};\r\n\r\n                this.setState({\r\n                    dataList: results,\r\n                    footerData: {\r\n                        ...this.state.footerData,\r\n                        page,\r\n                        count,\r\n                        totalPage: Math.ceil(count / this.state.footerData.limit)\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log({ error });\r\n            });\r\n    }\r\n    //#endregion 'Data region'\r\n\r\n    //#region 'Life circle'\r\n    componentDidMount() {\r\n        const {\r\n            match: {\r\n                params: {\r\n                    dataName\r\n                } = {}\r\n            } = {}\r\n        } = this.props || {};\r\n\r\n        const {\r\n            footerData: {\r\n                page = 1\r\n            } = {}\r\n        } = this.state || {};\r\n\r\n        const params = {\r\n            page\r\n        }\r\n        this.handleFetchData(dataName, params);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps) {\r\n        const {\r\n            match: {\r\n                params: {\r\n                    dataName\r\n                } = {}\r\n            } = {}\r\n        } = this.props || {};\r\n        const {\r\n            match: {\r\n                params: {\r\n                    dataName: nextDataName\r\n                } = {}\r\n            } = {}\r\n        } = nextProps || {};\r\n        if (dataName !== nextDataName) {\r\n            /* If data name is changed, reset status of datatable to fetch new data */\r\n            this.setState({\r\n                dataList: [],\r\n                footerData: {\r\n                    page: 1,\r\n                    count: 0,\r\n                    totalPage: 0,\r\n                    limit: 10\r\n                },\r\n                search: '',\r\n                detailCharacter: null\r\n            }, () => this.handleFetchData(nextDataName, {\r\n                page: 1\r\n            }));\r\n        }\r\n\r\n        return true;\r\n    }\r\n    //#endregion 'Life circle'\r\n\r\n    //#region 'Table event handle region'\r\n    handleSearchChange = (e) => {\r\n        const search = e.target.value;\r\n        this.setState({ search });\r\n    }\r\n\r\n    handleChangeActivedPage = (page) => {\r\n        const {\r\n            match: {\r\n                params: {\r\n                    dataName\r\n                } = {}\r\n            } = {}\r\n        } = this.props || {};\r\n\r\n        const params = {\r\n            page\r\n        }\r\n        this.handleFetchData(dataName, params);\r\n    }\r\n\r\n    handleNextOrPreviousPage = (nextOrPrv) => {\r\n        const {\r\n            match: {\r\n                params: {\r\n                    dataName\r\n                } = {}\r\n            } = {}\r\n        } = this.props || {};\r\n\r\n        const { page } = this.state.footerData;\r\n\r\n        const params = {\r\n            page: nextOrPrv === 'prv' ? page - 1 : page + 1\r\n        }\r\n        this.handleFetchData(dataName, params);\r\n    }\r\n\r\n    handleCloseDetailView = () => {\r\n        this.setState({\r\n            detailCharacter: null\r\n        })\r\n    }\r\n\r\n    handleGetDetailItem = (detailCharacter) => {\r\n        this.setState({\r\n            detailCharacter: {\r\n                title: detailCharacter.name,\r\n                image: detailCharacter.avatar,\r\n                body: detailCharacter\r\n            }\r\n        });\r\n    };\r\n\r\n    getTableHeaders = () => {\r\n        const {\r\n            match: {\r\n                params: {\r\n                    dataName\r\n                } = {}\r\n            } = {}\r\n        } = this.props || {};\r\n\r\n        return (dataViewHeaders[`${dataName}Columns`] || []).reduce((TableHeaders, column) => {\r\n            const {\r\n                key,\r\n                label,\r\n                show = true,\r\n                width,\r\n                minWidth\r\n            } = column;\r\n\r\n            const style = {};\r\n\r\n            if (width) style.width = width;\r\n            if (minWidth) style.minWidth = minWidth;\r\n\r\n            if (show) {\r\n                TableHeaders.push(<div key={key} style={style}>{label}</div>)\r\n            }\r\n\r\n            return TableHeaders;\r\n        }, []);\r\n    }\r\n\r\n    /* Get custom table columns */\r\n    getTableColumns = () => {\r\n        const {\r\n            match: {\r\n                params: {\r\n                    dataName\r\n                } = {}\r\n            } = {}\r\n        } = this.props || {};\r\n\r\n        return (dataViewHeaders[`${dataName}Columns`] || []).reduce((tableColumns, column) => {\r\n            const tableColumn = {\r\n                ...column\r\n            };\r\n\r\n            if (tableColumn.show === false) return tableColumns;\r\n\r\n            switch (tableColumn.key) {\r\n                case 'avatar':\r\n                    tableColumn.customCell = (character) => {\r\n                        /* Add options to image to get smaller image if it can */\r\n                        const avatar = `${character.avatar}${(character.avatar).includes('?') ? '&width=160' : '?width=160'}`;\r\n                        return <div\r\n                            className=\"table__cell--avatar\"\r\n                        >\r\n                            <img src={avatar} alt={character.name} />\r\n                        </div>\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            tableColumns.push(tableColumn);\r\n\r\n            return tableColumns;\r\n        }, []);\r\n    }\r\n    //#endregion 'Table event handle region'\r\n\r\n    render() {\r\n        const {\r\n            match: {\r\n                params: {\r\n                    dataName\r\n                } = {}\r\n            } = {}\r\n        } = this.props || {};\r\n\r\n        const {\r\n            dataList,\r\n            footerData,\r\n            detailCharacter,\r\n            search\r\n        } = this.state || {};\r\n\r\n        return (\r\n            <div className=\"dataview\">\r\n                <div className=\"dataview__header\">\r\n                    <div className=\"dataview__title\">\r\n                        <h1>{collectionsList[dataName] || 'Data'} list view</h1>\r\n                    </div>\r\n                    <div className=\"dataview__tool\">\r\n                        <SearchForm\r\n                            onInputChange={this.handleSearchChange}\r\n                            onSearch={() => this.handleFetchData(dataName)}\r\n                            inputValue={search}\r\n                            placeholder={`Enter ${dataName}'s name to search`}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <StripedTable\r\n                    className=\"dataview__table\"\r\n                    bodyData={dataList}\r\n                    tableHeaders={this.getTableHeaders()}\r\n                    tableColumns={this.getTableColumns()}\r\n                    footerData={footerData}\r\n                    handleChangeActivedPage={this.handleChangeActivedPage}\r\n                    handleNextOrPreviousPage={this.handleNextOrPreviousPage}\r\n                    handleOnClickRow={this.handleGetDetailItem}\r\n                />\r\n                <DetailView\r\n                    data={detailCharacter}\r\n                    onHide={this.handleCloseDetailView}\r\n                    dataName={dataName}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(DataView);","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NavRoute(props) {\r\n    const {\r\n        route,\r\n        img,\r\n        label\r\n    } = props || {};\r\n\r\n    return <Link to={route}>\r\n        <div className=\"starwars-nav__item--img\">\r\n            <img src={require(`./../../assets/images/collections/${img}`)} alt=\"\" />\r\n        </div>\r\n        <span>{label}</span>\r\n    </Link>\r\n}\r\n\r\nexport default NavRoute\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NavLogo(props) {\r\n    const {\r\n        onClick = () => { }\r\n    } = props || {};\r\n\r\n    return <Link\r\n        to=\"/\"\r\n        onClick={onClick}\r\n    >\r\n        <img src={require('./../../assets/images/star-wars-logo-png-3-transparent.png')} alt=\"\" />\r\n    </Link>\r\n}\r\n\r\nexport default NavLogo\r\n","import React, { Component } from 'react'\r\n\r\nclass NavHambuger extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.setButtonWrapperRef = this.setButtonWrapperRef.bind(this);\r\n    }\r\n\r\n    handleClickOutsideHambuger = (event) => {\r\n        if (this.buttonWrapperRef && !this.buttonWrapperRef.contains(event.target)) {\r\n            const {\r\n                open = false,\r\n                onClick = () => { }\r\n            } = this.props || {};\r\n\r\n            if (open) onClick();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutsideHambuger);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutsideHambuger);\r\n    }\r\n\r\n    setButtonWrapperRef(node) {\r\n        this.buttonWrapperRef = node;\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            className = '',\r\n            onClick = () => { }\r\n        } = this.props || {};\r\n        return (\r\n            <button\r\n                ref={this.setButtonWrapperRef}\r\n                className={`starwars-nav__ham starwars-nav-home__ham ${className}`}\r\n                onClick={onClick}\r\n            >\r\n                <div></div>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavHambuger\r\n","import React, { useState } from 'react'\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { collections } from './../../constants/collections';\r\n\r\nimport NavRoute from './NavRoute';\r\nimport NavLogo from './NavLogo';\r\nimport NavHambuger from './NavHambuger';\r\n\r\nimport './_nav.scss';\r\n\r\nfunction Nav(props) {\r\n    const {\r\n        match: {\r\n            isExact = false\r\n        } = {},\r\n        location: {\r\n            pathname = '/'\r\n        } = {}\r\n    } = props || {};\r\n\r\n    const [open, toggleOpen] = useState(false);\r\n\r\n    return (\r\n        <nav className={`starwars-nav ${isExact ? 'starwars-nav-home' : ''} ${open ? 'nav-open' : ''}`}>\r\n            <div className=\"starwars-nav__head\">\r\n                <NavHambuger\r\n                    open={open}\r\n                    onClick={() => toggleOpen(!open)}\r\n                />\r\n                <div className=\"starwars-nav__logo\">\r\n                    <NavLogo />\r\n                </div>\r\n            </div>\r\n            <ul className=\"starwars-nav__list\">\r\n                {\r\n                    (collections || []).map(collect => {\r\n                        const {\r\n                            key,\r\n                            ...collectData\r\n                        } = collect || {};\r\n\r\n                        return <li className={`starwars-nav__item ${pathname.startsWith(collectData.route) ? 'starwars-nav__item--active' : ''}`} key={key}>\r\n                            <NavRoute\r\n                                {...collectData}\r\n                            />\r\n                        </li>\r\n                    })\r\n                }\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default withRouter(Nav)\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport HomeView from './../Home/HomeView';\r\nimport DataView from './../DataView/DataView';\r\n\r\nimport Nav from './../../components/Nav/Nav';\r\n\r\nfunction MainLayout() {\r\n    return (\r\n        <Router>\r\n            <Nav />\r\n            <section role=\"main\">\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={HomeView} />\r\n                    <Route exact path=\"/starwars-client\">\r\n                        <Redirect to=\"/\" />\r\n                    </Route>\r\n                    <Route path=\"/data/:dataName\" component={DataView} />\r\n                </Switch>\r\n            </section>\r\n        </Router>\r\n\r\n    )\r\n}\r\n\r\nexport default MainLayout\r\n","import React from 'react';\r\nimport MainLayout from './containers/Layout/MainLayout';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <MainLayout />\r\n      <div id=\"star-bg\">\r\n        <div id=\"star-small\"></div>\r\n        <div id=\"star-medium\"></div>\r\n        <div id=\"star-big\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './assets/styles/styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}